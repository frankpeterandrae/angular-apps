/*!
 * Copyright (c) 2024. Frank-Peter Andr√§
 * All rights reserved.
 */
@use 'sass:meta';
@use '../base/prefix';
@use '../base/variables';

@mixin margin($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}m#{$breakpoint-prefix}-#{$name} {
			margin: $margin;
		}
	}
}

@mixin margin-top($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}mt#{$breakpoint-prefix}-#{$name} {
			margin-top: $margin;
		}
	}
}

@mixin margin-bottom($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}mb#{$breakpoint-prefix}-#{$name} {
			margin-bottom: $margin;
		}
	}
}

@mixin margin-left($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}ml#{$breakpoint-prefix}-#{$name} {
			margin-left: $margin;
		}
	}
}

@mixin margin-right($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}mr#{$breakpoint-prefix}-#{$name} {
			margin-right: $margin;
		}
	}
}

@mixin margin-x($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}mx#{$breakpoint-prefix}-#{$name} {
			margin-right: $margin;
			margin-left: $margin;
		}
	}
}

@mixin margin-y($breakpoint-prefix, $map) {
	@each $name, $margin in $map {
		.#{prefix.$prefix}my#{$breakpoint-prefix}-#{$name} {
			margin-top: $margin;
			margin-bottom: $margin;
		}
	}
}

@mixin padding($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}p#{$breakpoint-prefix}-#{$name} {
			padding: $padding;
		}
	}
}

@mixin padding-top($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}pt#{$breakpoint-prefix}-#{$name} {
			padding-top: $padding;
		}
	}
}

@mixin padding-bottom($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}pb#{$breakpoint-prefix}-#{$name} {
			padding-bottom: $padding;
		}
	}
}

@mixin padding-left($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}pl#{$breakpoint-prefix}-#{$name} {
			padding-left: $padding;
		}
	}
}

@mixin padding-right($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}pr#{$breakpoint-prefix}-#{$name} {
			padding-right: $padding;
		}
	}
}

@mixin padding-x($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}px#{$breakpoint-prefix}-#{$name} {
			padding-right: $padding;
			padding-left: $padding;
		}
	}
}

@mixin padding-y($breakpoint-prefix, $map) {
	@each $name, $padding in $map {
		.#{prefix.$prefix}py#{$breakpoint-prefix}-#{$name} {
			padding-top: $padding;
			padding-bottom: $padding;
		}
	}
}

$values: (
	'0': 0,
	'05': 0.5rem,
	'1': 1rem,
	'15': 1.5rem,
	'2': 2rem,
	'3': 3rem,
	'4': 4rem,
);

* {
	margin: 0;
	padding: 0;
}

@each $name, $width in variables.$breakpoints {
	$breakpoint-prefix: '-' + $name;

	@if $name == uw {
		$breakpoint-prefix: '';
	}

	@include margin($breakpoint-prefix, $values);
	@include margin-top($breakpoint-prefix, $values);
	@include margin-bottom($breakpoint-prefix, $values);
	@include margin-left($breakpoint-prefix, $values);
	@include margin-right($breakpoint-prefix, $values);
	@include margin-x($breakpoint-prefix, $values);
	@include margin-y($breakpoint-prefix, $values);
	@include padding($breakpoint-prefix, $values);
	@include padding-top($breakpoint-prefix, $values);
	@include padding-bottom($breakpoint-prefix, $values);
	@include padding-left($breakpoint-prefix, $values);
	@include padding-right($breakpoint-prefix, $values);
	@include padding-x($breakpoint-prefix, $values);
	@include padding-y($breakpoint-prefix, $values);
}
